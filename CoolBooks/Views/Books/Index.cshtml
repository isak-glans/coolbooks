@model IEnumerable<CoolBooks.Models.Books>

@{
    ViewBag.Title = "Index";
}

<h2>Böcker</h2>





@using (Html.BeginForm())
{
    <div id="booksIndexSearch">        
        <div class="row">
            <div class="col-md-2">                
                Genre: @Html.DropDownList("bookGenre", (IEnumerable<SelectListItem>)@ViewBag.bookGenre, "All", new { @class = "form-control" })
            </div>

            <div class="col-md-2">
                Title: @Html.TextBox("titleString", null, new { @class = "form-control" })
            </div>

            <div class="col-md-2">
                Author: @Html.TextBox("authorString", null, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                ISBN: @Html.TextBox("isbnString", null, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                <input type="submit" value="Filter" class="btn btn-primary" />
            </div>            
        </div>   
    </div>
     
}
 
<table class="table">
    <tr>        
        <th>
            Author
        </th>
        <th>
            Genre
        </th>
        <th>
            Title
        </th>
        <th>
            Description
        </th>
        <th>
            Average Rating
        </th>
        <th>
            Image
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>        
        <td>
            @Html.DisplayFor(modelItem => item.Authors.FirstName) @Html.DisplayFor(modelItem => item.Authors.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genres.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>

        <td>     
            @{
                var description = item.Description;
                if (description != null && description.Length > 2500)
                {
                    description = description.Substring(0, 2500);
                    description += " ...";
                }
                @Html.DisplayFor(d => description)
            }            
        </td>

        @if (item.AvgRating.HasValue)
        {
            <td>
                <span class="stars" title="@Math.Round((double)item.AvgRating, 2)">
                    <span class="stars" style="width:@((int)Math.Round((double)item.AvgRating * 16))px;"></span>
                </span>
            </td>
        }
        else
        {
            <td>
                N/A
            </td>
        }

        <td>            
            <a href='@Url.Action("Details", "Books", routeValues : new { id = item.Id } )'>
                @{ 
                    var imgPath = "Content/book_covers/" + item.ImagePath;
                }                            
                <div style="background-image:url(@imgPath)" class="book_medium"></div>                
            </a>
        </td>
        
        <td>
            @if (User.IsInRole("Admin"))
            {
                <a href="@Url.Action("Edit", "Books", new { id = item.Id } )" class="btn btn-default">                   
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                </a>
                
                <a href="@Url.Action("Details", "Books", new { id = item.Id } )" class="btn btn-default">
                    <span class="glyphicon glyphicon-zoom-in" aria-hidden="true"></span>
                </a>

                <a href="@Url.Action("Delete", "Books", new { id = item.Id } )" class="btn btn-default">
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                </a>
                
            }            
        </td>
    </tr>
}

</table>

<p>
    <a href="@Url.Action("Create", "Books" )" class="btn btn-default">
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
    </a>
</p>